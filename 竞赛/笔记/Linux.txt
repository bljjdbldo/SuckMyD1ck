https://www.runoob.com/linux/linux-tutorial.html
Linux
	了解操作系统的作用
	了解常见的操作系统
计算机：硬件和软件组成。 硬件：计算机系统中由电子，机械和光电元件等组成的各种物理装置的总称(看得见摸得着)软件：是用户和计算机硬件之间的接口和桥梁，用户通过软件与计算机进行交流。而操作系统，就是软件的一类。(操作系统+硬件=计算机)
操作系统是计算机软件的一种，它主要负责:作为用户和计算机硬件之间的桥梁，调度和管理计算机硬件进行工作。而计算机如果没有操作系统，就是一堆无法使用的塑料而已。
操作系统:调度键盘进行文字输入、调度显示器显示内容、调度CPU内存供微信运行、调度网卡发送信息、调度网卡接受信息
常见操作系统（PC也就是个人电脑所使用的操作系统，移动设备所使用的操作系统
总结
1.计算机由硬件和软件两个主要部分组成
2.操作系统是软件的一类。主要作用是协助用户调度硬件工作，充当用户和计算机硬件之间的桥梁。
3.常见的操作系统有PC端:Windows、linux、MacOS移动端:Android\IOS\鸿蒙系统
述初识Linux
	了解Linux系统的诞生
	了解什么是Linux内核
	了解常见的Linux发行商
Linux创始人:林纳斯 托瓦兹
Linux诞生于1991年，作者上大学期间
因为创始人在上大学期间经常需要浏览新闻和处理邮件，发现现有的操作系统不好用，于是他决心自己写一个保护模式下的操作系统，这就是Linux的原型，当时他21随，后来经过全世界网友的支持，现在能够兼容更多硬件，成为最为流行的服务器操作系统之一。
总结
	Linux由林纳斯 托瓦兹在1991年创立并发展至今成为服务器操作系统领域的核心系统。
	内核提供了Linux系统的主要功能，如硬件调度管理的功能。Linux内核是免费开源的，任何人都可以查看内核的源代码，甚至是贡献源代码。
	内核无法被用户直接使用，需要配合应用程序才能被用户使用。在内核之上，封装系统级应用程序，组合在一起就称之为Linux发行版。发行版众多，课程主要基于CentOS辅以Ubuntu进行讲解。
虚拟机介绍
总结
	通过虚拟化技术，在电脑内，虚拟出计算机硬件，并给虚拟的硬件安装操作系统，即可得到一台虚拟的电脑，称之为虚拟机。
	学习Linux系统，需要Linux系统环境。我们不能给自己电脑重装系统为Linux，所以通过虚拟机的形式，得到可以用的Linux系统坏境，供后续学习使用。
d文件夹-文件r读写4 w写入2 x执行1 
2024.1.9
图形化、命令行
总结
1.图形化操作是指使用操作系统附带的图形化页面，一图形化的窗口形式获得操作反馈，从而对操作系统进行操作、使用
命令行操作是指使用各种命令，以文字字符的形式获得操作反馈，从而对操作系统进行操作、使用
2.Linux操作系统的图形化页面不好用且不稳定
使用命令行的形式操作更加高效且稳定资源占用低
企业和开发者都选择命令行，所以我们也学习命令行
命令行界面
user：当前登录的用户名。
localhost：主机名。
~：表示当前所在的目录是家目录（/home/user/）。
$：表示当前是普通用户。如果是 #，则表示是 root 用户。

如何关机
sudo systemctl poweroff         关机命令	sudo shutdown -h now
-h:代表 Halt，即停止系统
now：表示立即执行。也可以替换为时间，例如 +5（5分钟后）或 22:00（在晚上10点执行）。
sudo systemctl reboot            重启命令	sudo shutdown -r now
-r:代表 Reboot，即重启
sudo shutdown -c
如果你使用了 shutdown +5 这样的命令计划在将来关机，但改变了主意，可以使用上述命令取消。其中，-c:代表cancel，即取消

打开多个终端
tty         查看终端的数量
who     查看当前系统中有哪些用户已经登录，以及他们登录在哪个终端上。 
ctrl+alt+f2     切换终端
exit     关闭终端


Linux目录结构视图
·基本介绍(主目录要背，不然工作当中控制台不会显示就蒙圈力
	Linux的文件系统是常用级层式的树状目录结构，在此结构中的最上层是根目录”/”，如何在此目录下再创建其他目录
Linux世界里，一切皆文件
·/bin[常用](/usr/bin、/usr/local/bin)
是Binary的缩写 二进制的意思，最经常使用的执行命令就存放在这儿
·/sbin(/usr/sbin、/sur/local/sbin)
s就是Super User的意思，这里是存放的系统管理员使用的系统管理程序
·boot[常用]
启动目录，跟计算机启动相关的文件都存放在这儿
·/dev类似于windows设备管理器，把所有的硬件用文件的形式存储驱动/设备/硬件，键盘设备光驱显示器U盘打印机
·media[常用]
Linux系统会自动识别一些设备，列如U盘、光驱等等，当识别后，Linux会把识别的设备挂载到这个目录下
·/mnt[常用]
系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在/mnt/上然后进入该目录就可以查看里面的内容了 d:/myshare
·/opt这是给主机额外安装软件所摆放的目录。如安装ORACLE数据库就可放到该目录下。默认为空
·/etc[常用]
所有的系统管理所需的配置文件和子目录，能够让系统正常地运行、维护、管理以及安装软件等等
·/usr[常用]
这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录
·/usr/local[常用]
这是另一个给主机额外安装软件所安装的目录。一般是通过编译源码方式安装的程序
·var[常用]
这个目录中存放着在不断扩充着的东西(日志等)，习惯将被修改的目录放在这个目录下。包括各种日志文件
·/selinux[security-enhanced linux]
SELinux是一种安全子系统(如Widows360)，它能控制程序只能访问特定文件，有三种工作模式，可以自行设置
·/proc[不能动]这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息
·/srv[不能动]service(服务)缩写，该目录存放一些服务启动之后需要提取的数据
·/sys[不能动]这是Linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统sysfs [别动]
·/tmp这个目录是用来存放一些临时文件的
·/home[常用]
存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般该目录名是以用户的账号号命名
·/root[常用]
(root用户)主目录，系统管理员个人文件和配置文件，确保系统正常运行和管理
·/lib系统开机所需要最基本的动态链接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库
·/lost+found这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件

Linux命令基础格式
Command[-oiptions][parameter]
Command:命令本身
-options:[可选，非必填]命令的一些选项，可以通过选项控制命令的行为细节
Parameter:[可选，非必填]命令的参数，多数用于命令的指向目标等
语法中的[]，表示可选的意思
示例:
ls -l /home/itheima,ls是命令本身，-l是选项，/home/itheima是参数
意思是以列表的形式，显示/home/itheima目录内的内容
cp -r test1 test2,cp是命令本身，-r是选项，test1和test2是参数
意思是复制文件夹test1成为test2
总结
1.命令:即Linux操作指令，是系统内置的程序，可以学符化的形式去使用
命令行:即Linux终端，可以提供字符化的操作页面供命令执行
2.command [-options][parameter]
命令本体，即命令本身
可选选项，控制命令的行为细节
可选参数，控制命令的指向目标
ls命令入门
总结
目标
1.ls命令的作用是在命令行中，以平铺的形式，展示当前工作目录(默认HOME目录)下的内容(文件或文件夹)
2.HOME目录是每一个用户在Linux系统的专属目录，默认在:/home/用户名
3.当前工作目录是Linux命令行在执行命令的时候，需要一个工作目录，打开命令行程序(终端)默认这只工作目录在用户的HOME目录
ls命令的参数和选项
总结
	ls指令的参数的作用是可以指定要查看的文件夹(目录)的内容，如果不给定参数，就查看当前工作目录的内容
	ls命令的选项:
-a	all查看目录下所有文件，包括隐藏的内容
*以.开头的文件或文件默认被隐藏，需要-a才能显示出来
-d	只列出目录名，不列出其他内容
-l	以长列表的形式展示内容，并展示更多细节
-h	human，以人性化的方式显示大小单位
-t	按修改时间排序
-r	逆序排列
-S	按文件大小排序
-i	显示文件的inode号（索引号）
-R	递归列出目录中的内容
-m 	用逗号分隔显示内容
示例
	命令的选项是可以组合使用的，比如：ls -lah，等于ls -a -l -h
目录切换相关命令(cd/pwd)
总结
1.cd命令的作用
cd命令来自英文：Change Directory
cd命令可以切换当前工作目录，语法是：
cd[Linux路径]
*没有选项，只有参数，表示目录路径
*使用参数，切换指定路径
*不使用参数，切换工作目录当前用户的HOME
2.pwd命令的作用
*pwd命令来自英文：Print Work Directory
*pwd命令，没有选项，没有参数，直接使用即可
*作用是：输出当前所在的工作目录
相对路径、绝对路径和特殊路径符
总结
	相对路径和绝对路径
*绝对路径：以根目录做起点，描述路径的方式，路径以/开头
*相对路径：以当前目录做启动，描述路径的方式，路径不需以/开头
*如无特殊需求，后续学习中，将经常使用相对路径表示
	特殊路径符
*.表示当前目录，比如cd.或cd./Desktop
*..表示上一级目录，比如：cd..或cd../..
*~表示用户的HOME目录，比如cd~或cd~/Desktop
返回上次工作路径cd -
创建目录[文件夹]命令(mkdir)
总结
	mkdir命令的语法和功能
*mkdir来自英文：Make Directory
*mkdir [-p] Linux路径
*语法：mkdir[-p]Linux路径
*参数必填，表示要创建的目录[文件夹]的路径，相对、绝对、特殊路径符都可以使用
2.-p选项的作用
*可选，表示自动创建不存在的父目录，适用于创建连续多层级的目录
文件操作命令part1(touch\cat\more)
总结
自touch命令
*用于创建一个新的文件
*语法：touch Linux路径
*参数必填，表示要创建的文件的路径，相对、绝对、特殊路径符都可以使用
touch -a file1 -t 202509161526
touch -m file1 -t 202509161526
-a:访问时间
-m:修改时间
-t:时间类型格式
Linux下文件的命名规则
1.文件名严格区分大小写file FILE
2.文件名不能包含特殊符号，如（/或*等）
3.文件名最多可达255个字符
stat （文件名）查看文件的状态信息
Cat命令
*用于查看文件内容
*语法：cat Linux路径
*参数必填，表示要查看的文件的路径，相对、绝对、特殊路径符都可以使用
-n:显示行数
-A:显示控制字符，如换行符，制表符等（linux $ ）
tac命令：一般查看小文件，从最后一行到第一行列出来
more和less命令：一般查看大文件，q退出查看，可以搜索建议less
3.more命令
*用于查看文件内容，可翻页查看
*语法：more Linux路径
*参数必填，表示要查看的文件的路径，相对、绝对、特殊路径都可以使用
*使用空格翻页，使用q退出查看
文件操作命令part2（cp\mv\rm）
总结
	cp命令
*cp命令来自英文单词：copy
*用于复制文件或文件夹
*语法：cp[-r] 参数1 参数2
*-r选项，可选，用于复制文件夹使用，表示递归
*参数1，Linux路径，表示被复制的文件或文件夹
*参数2，Linux路径，表示要复制去的地方
	mv指令
*mv命令来自英文单词：move
*用于查看文件内容
*语法：mv 参数1 参数2
*参数1，Linux路径，表示被移动的文件或文件夹
*参数2，Linux路径，表示要移动去的地方，如果目标不存在，则进行改名，确保目标存在
	rm命令
*rm命令来自英文单词：remove
*用于复制文件或文件夹
*语法：rm[-r -f]参数1参数2……参数N
*-r选项，可选，文件夹删除
*-f选项，可选，用于强制删除(不提示，一般用于root用户)
*参数，表示被删除的文件或文件夹路径，支持多个，空格隔开隔开
*参数也支持通配符*，用以做模糊匹配
	file命令判断文件类型
*常见文件类型
字符文件（c）所有输入输出的设备，如：键盘、鼠标、显示器、打印机等
块设备（b）所有存储设备称之为块设备文件，如：软盘、磁盘、光盘、U盘、磁带、光驱等
软连接文件（l）类似于Windows下的快捷方式
目录文件（d）相当于Windows下的文件夹
普通文件（f或-）类似Windows下记事本、word等，可以使用相关命令进行编辑、查看文件内容
管道文件（p）简单理解为程序或京城之间通讯的一种方式
套接字文件（s）简单理解为程序或进程之间通讯的一种方式
*用file命令判断文件类型
[root@localhost ~]#file /root
/root:directory	目录
[root@localhost ~]#file /root/install.log
/root/install.log:ASCII text	普通的文件文本
[root@localhost ~]#file /dev/sda
/dev/sda:block special	块设备文件，存放数据
[root@localhost ~]#file /dev/tty1
/dev/tty1:character special	字符设备
[root@localhost ~]#file /bin/sh
/bin/sh:symbolic link to bash 软连接文件
2024.1.10
which-find命令
总结
Which目录
查找命令的程序文件
语法：which要查找的命令
无需选项，只需要参数表示查找哪个命令
Find命令
用于查找指定的文件
按文件名查找：find 起始路径 -name “被查找文件名”
支持通配符
按文件大小查找：find 起始路径 -size ±n[kMG]
grep\wc和管道符
	掌握使用grep命令
	掌握使用wc命令统计内容数量
	掌握|管道符的概念和应用
总结
1.grep命令
*从文件中通过关键字过滤文件行
*语法：grep [-n] 关键字 文件路径
*选项-n，可选，表示在结果中显示匹配的行的行号
*参数，关键字，必填，表示过滤的关键字，带有空格或其它特殊，建议别用“”将关键字包围起来
*参数，文件路径，必填，表示要过滤内容的文件路径，可作为内容输入端口
2.wc命令
*可以通过wc命令统计文件的行数、单词数量等
*语法：wc[-c -m -l -m] 文件路径
*选项，-c，统计bytes数量
*选项，-m，统计字符数量
*选项，-l，统计行数
*选项，-w，统计单词数量
*参数，文件路径，被统计的文件，可作为内容输入端口
3.管道符|
将管道符左边命令的结案，作为右边命令的输入
echo\tail和重定向符
	掌握使用echo命令输出内容
	掌握反引号`的使用
	掌握tail命令跟踪文件更改
	掌握重定向符号的使用
总结
1.echo命令
*可以使用echo命令在命令行内输出指定内容
*语法:echo输出的内容
*无需选项，只有一个参数，表示要输出的内容，复杂内容可以用“”包围
2.反引号符
*被`包围的内容，会被作为命令执行，而非普通字符
3.重定向符
*>,将左侧命令的结果，覆盖写入到符号右侧指定的文件中
*>>，将左侧命令的结果，追加写入到符号右侧指定的文件中
4.tail命令
*查看文件尾部内容，并可以持续跟踪
*语法：tail [-f -num] Linux路径
*-f：持续跟踪，-num：启动的时候查看尾部多少行，默认10
*Linux路径，表示被查看的文件
2024.1.11 
vi\vim编辑器

总结
1.什么是vi/vim编辑器
Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。
简单的来说，vi是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。
连vim的官方网站(https://www.vim.org/)自己也说vim是一个程序开发工具而不是文字处理软件。
2.基础命令
Vi 文件路径
Vim 文件路径
3.运行模式
命令模式，默认的模式，可以通过键盘快捷键控制文件内容
输入模式，通过命令模式进入，可以输入内容进行编辑，按esc退回
底线命令模式，通过命令模式进入，可以对文件进行保存、关闭等操作
补全命令
2024.1.12 
Linux系统中目录结构是倒状树形图tree -L1/
Pwd当前工作目录，cat查看文件内容，which查看可执行文件的路径
绝对路径
就是真实的路径,是计算机中完整路径,必须准确,否则不能找到,起点是系统的根目录,也就是各个盘符
C:/Users/a1394/Desktop/OneDrive
相对路径
绝对路径是一种简化版的路径,以当前文件,活动窗口目录为根目录,进行向上或者向下c
Vim编辑器3种模式，普通 命令 插入
Vim状态：set nux 首行gg 尾行G
Vim状态写入ifconfig的返回值：r！Ifconfg
2024.9.29
vi\vim是visual interface的简称，是Linux中最经典的文本编辑器
vim是vi的加强版本，兼容vi所有指令，不仅能编辑文本，还具有shell程序编辑的功能，可以不同颜色字体辨别语法正确性，极大方便了程序的设计和编辑性
vi/vim编辑器的三种工作模式
命令模式（Command mode）
命令模式下，所敲的按键编辑器都可以理解为命令，以命令驱动执行不同的功能。此模型下，不能自由进行文本编辑。
输入模式（Insert mode）
也就是所谓的编辑模式，插入模式。
此模式下，可以对文件内容进行自由编辑
底线命令模式（Last line mode）
以：开始，通常用于文件的保存，退出
vim hello.txt 1.编辑一个新文件，执行后进入的是命令模式
2.命令模式内，按i，进入输入模式
3.在输入模式输入完内容后按回车或Ese回退命令模式
4.在命令模式内按：，进入底线命令模式
5.在底线命令内输入：wq，保存文件并退出vi编辑器
https://www.runoob.com/linux/linux-vim.html
移动光标的方法
h 或 向左箭头键(←)	光标向左移动一个字符
j 或 向下箭头键(↓)	光标向下移动一个字符
k 或 向上箭头键(↑)	光标向上移动一个字符
l 或 向右箭头键(→)	光标向右移动一个字符
如果你将右手放在键盘上的话，你会发现 hjkl 是排列在一起的，因此可以使用这四个按钮来移动光标。 如果想要进行多次移动的话，例如向下移动 30 行，可以使用 "30j" 或 "30↓" 的组合按键， 亦即加上想要进行的次数(数字)后，按下动作即可！
[Ctrl] + [f]	屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)
[Ctrl] + [b]	屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)
[Ctrl] + [d]	屏幕『向下』移动半页
[Ctrl] + [u]	屏幕『向上』移动半页
+	光标移动到非空格符的下一行
-	光标移动到非空格符的上一行
n<space>	那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如 20<space> 则光标会向后面移动 20 个字符距离。
0 或功能键[Home]	这是数字『 0 』：移动到这一行的最前面字符处 (常用)
$ 或功能键[End]	移动到这一行的最后面字符处(常用)
H	光标移动到这个屏幕的最上方那一行的第一个字符
M	光标移动到这个屏幕的中央那一行的第一个字符
L	光标移动到这个屏幕的最下方那一行的第一个字符
G	移动到这个档案的最后一行(常用)
nG	n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)
gg	移动到这个档案的第一行，相当于 1G 啊！ (常用)
n<Enter>	n 为数字。光标向下移动 n 行(常用)
搜索替换
/word	向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)
?word	向光标之上寻找一个字符串名称为 word 的字符串。
n	这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！
N	这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。
使用 /word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！
:n1,n2s/word1/word2/g	n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则：
『:100,200s/vbird/VBIRD/g』。(常用)
:1,$s/word1/word2/g 或 :%s/word1/word2/g	从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)
:1,$s/word1/word2/gc 或 :%s/word1/word2/gc	从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)
删除、复制与贴上
x, X	在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)
nx	n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。
dd	剪切游标所在的那一整行(常用)，用 p/P 可以粘贴。
ndd	n 为数字。剪切光标所在的向下 n 行，例如 20dd 则是剪切 20 行(常用)，用 p/P 可以粘贴。
d1G	删除光标所在到第一行的所有数据
dG	删除光标所在到最后一行的所有数据
d$	删除游标所在处，到该行的最后一个字符
d0	那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符
yy	复制游标所在的那一行(常用)
nyy	n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)
y1G	复制游标所在行到第一行的所有数据
yG	复制游标所在行到最后一行的所有数据
y0	复制光标所在的那个字符到该行行首的所有数据
y$	复制光标所在的那个字符到该行行尾的所有数据
p, P	p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)
J	将光标所在行与下一行的数据结合成同一行
c	重复删除多个数据，例如向下删除 10 行，[ 10cj ]
u	复原前一个动作。(常用)
[Ctrl]+r	重做上一个动作。(常用)
这个 u 与 [Ctrl]+r 是很常用的指令！一个是复原，另一个则是重做一次～ 利用这两个功能按键，你的编辑，嘿嘿！很快乐的啦！
.	不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)
一般模式切换到编辑模式的可用的按钮说明
进入输入或取代的编辑模式
i, I	进入输入模式(Insert mode)：
i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)
a, A	进入输入模式(Insert mode)：
a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)
o, O	进入输入模式(Insert mode)：
这是英文字母 o 的大小写。o 为在目前光标所在的下一行处输入新的一行； O 为在目前光标所在的上一行处输入新的一行！(常用)
r, R	进入取代模式(Replace mode)：
r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)
上面这些按键中，在 vi 画面的左下角处会出现『--INSERT--』或『--REPLACE--』的字样。 由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！
[Esc]	退出编辑模式，回到一般模式中(常用)
一般模式切换到指令行模式的可用的按钮说明
指令行的储存、离开等指令
:w	将编辑的数据写入硬盘档案中(常用)
:w!	若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！
:q	离开 vi (常用)
:q!	若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。
那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思
:wq	储存后离开，若为 :wq! 则为强制储存后离开 (常用)
ZZ	这是大写的 Z 喔！如果修改过，保存当前文件，然后退出！效果等同于(保存并退出)
ZQ	不保存，强制退出。效果等同于 :q!。
:w [filename]	将编辑的数据储存成另一个档案（类似另存新档）
:r [filename]	在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面
:n1,n2 w [filename]	将 n1 到 n2 的内容储存成 filename 这个档案。
:! command	暂时离开 vi 到指令行模式下执行 command 的显示结果！例如
『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！
vim 环境的变更
:set nu	显示行号，设定之后，会在每一行的前缀显示该行的行号
:set nonu	与 set nu 相反，为取消行号！
特别注意，在 vi/vim 中，数字是很有意义的！数字通常代表重复做几次的意思！ 也有可能是代表去到第几个什么什么的意思。

举例来说，要删除 50 行，则是用 『50dd』 对吧！ 数字加在动作之前，如我要向下移动 20 行呢？那就是『20j』或者是『20↓』即可。
2024.9.30
Linux的root用户
Linux系统中，拥有最大权限的账户名：root（超级管理员）
普通用户：itheima 一般在其HOME目录权限不受限，出了HOME目录大多数地方仅有只读和执行权限，无修改权限
su命令和exit命令
su命令就是用于账户切换的系统命令，其来源英文单词：Stitch User
语法：su [-] [用户名]
*-符号是可选的，表示是否在切换用户后加载环境变量，建议带上
*参数：用户名，表示要切换的用户，用户名也可以省略，省略表示切换到root
*切换用户后，可以通过exit命令退回上个用户，也可以使用快捷键：ctrl+d
*使用普通用户，切换到其他用户需要输入密码，如切到root用户
*使用root用户切换到其他用户，无需密码，可以直接切换
sudo命令
不建议长期使用root用户，避免带来系统损坏
可以用sudo命令，为普通的命令授权，临时以root身份执行
语法：sudo 其他命令
*在其他命令之前，带上sudo，即可为这一条命令临时赋予root授权
*不是所有用户有权利使用sudo，我们需要为普通用户配置sudo认证
为普通用户配置sudo认证
*切换到root用户，执行visudo命令，会自动通过vi通过:/etc/sudoers
*在文件最后添加：itheima ALL=（ALL）	NOPASSWD：ALL
*itheima用户ALL全部权限NOPASSWD：ALL表示使用sudo命令无需输入密码
*最后通过wq保存
*切回普通用户执行的命令均以root运行
*sudo 其他命令 即可让普通用户有sudo命令的执行权限
总结
1.Linux系统的超级管理员用户是：root
2.su命令
*可以切换用户，语法：su [-] [用户名]
*-表示切换后加载环境变量，建议带上(su和su - 切换用户的区别，主要涉及login-shell和non-login shell的变量读取方法。su - 切换用户后会切换PATH/USER/MAIL等变量，而su切换用户后不会，导致执行命令出现报错“command not found”。linux执行命令会通过PATH变量中的目录一次查找，当路径中不包括/sbin、/usr/sbin等目录时自然就找不到，想要完整切换到新用户环境，必须使用su - 切换，这样才会联通PATH/USER/MAIL等变量都转成新用户的环境)
*用户可以省略，省略默认切换到root
3.sudo命令
*可以让一条普通命令带有root权限，语法：sudo 其他命令
*需要以root用户执行visudo命令，增加配置方可让普通用户有sudo命令的执行权限

用户、用户组管理
Linux系统中可以
*配置多个用户
*配置多个用户组
*用户可以加入多个用户组中
Linux中关于权限的管控级别有2个级别，分别是：
*针对用户的权限控制
*针对用户组的权限控制

用户组管理
以下命令需root用户执行
*创建用户组
groupadd 用户组名
*删除用户组
groupdel 用户组名

用户管理
以下命令需root用户执行
*创建用户
useradd [-g -d]用户名
**选项：-g指定用户的组，不指定-g，会创建同名组并自动加入，指定-g需要组已经存在，如已存在同名组，必须使用-g
**选项：-d指定用户HOME路径，不指定，HOME目录默认在：/home/用户名

*删除用户
userdel [-r]用户名
**选项：-d，删除用户的HOME目录，不使用-r，删除用户时，HOME目录保留

查看用户所属组
id[用户名]
*参数：用户名，被查看的用户。如果不提供则查看自身

*修改用户所属组
usermod -aG 用户组 用户名，将指定用户加入到指定用户组

getent
使用getent命令，可以查看当前系统中有哪些有哪些用户
语法：getent passwd
共有7份信息，分别是：
用户名：密码（x）：用户ID：组ID：描述信息（无用）：HOME目录：执行终端（默认base）

getent
使用getent命令，同样可以查看当前系统中有哪些用户组
语法：getent group
包含3份信息，组名称：组认证（显示为x）：组ID
总结
1.Linux用户管理模式
*Linux可以支持多用户、多用户组、用户加入多个组
*Linux权限管控的单元式用户级别和用户组级别
2.用户、用户组相关管理命令
*groupadd添加组、groupdel删除组
*useradd添加用户、userdel删除用户
*usermod修改用户组、id命令查看用户信息
*getent passwd查看系统全部用户信息
*getent group查看全部组信息
2024.10.9
查看权限控制信息

认知权限信息
通过ls -l可以列表形式查看内容，并显示权限细节
1、文件、文件夹的权限控制信息 2、文件、文件夹所属用户 3、文件、文件夹所属用户组

权限细节总共分为10个槽位
（-或d或l）(r或- w或- x或-)所属用户权限（r或- w或- x或-）所属用户组权限（r或- w或- x或-）其他用户权限

-表示文件
d表示文件夹
l表示软链接

rwx
*r表示读权限
*w表示写权限
*x表示执行权限
针对文件、文件夹的不同，rwx的含义有细微差别
*r，针对文件可以查看文件内容
**针对文件夹，可以产看文件夹内容，如ls命令
*w，针对文件表示可以修改此1文件
**针对文件夹，可以在文件夹内：创建、删除、改名等操作
*x，针对文件可以将文件作为程序执行
**针对文件夹，表示可以更改工作目录到此文件夹，即cd进入
举例：drwxr-xr-x，表示：
*这是一个文件夹，首字母d表示
*所属用户的权限是：rwx
*所属用户组的权限是：r-x（-表无此权限
*其他用户的权限是：r-x

chmod命令
我们可以使用chmod命令，修改文件、文件夹的权限信息。
注意，只有文件、文件夹的所属用户或root用户可以修改。
语法：chmod [-R] 权限 文件或文件夹
*选项：-R，对文件夹内的全部内容应用相同的操作
示例：
*chmod u=rwx,g=rx,o=x hello.txt ，将文件权限修改为：rwxr-x--x
**其中：u表示user所属用户权限，g表示group组权限，o表示other其他用户权限
*chmod -R u=rwx,g=rx,o=x test，将文件夹test以及文件夹内全部内容权限设置为：rwxr-x--x
快捷写法：chmod 751 hello.txt
权限可以用3位数字表示，第一位数字表示用户权限，第二位表示用户组权限，第三位表示其它用户权限
r记为4，w记为2，x记为1，可以有：
*0：无任何权限 即---
*1：仅有执行权限 即--x
*2：仅有写权限 即-w-
*3：有写执行权限 即-wx
*4：有读权限 即r-- 
*5：有读执行权限 即r-x
*6：有读写权限 即rw-
*7：有读写执行权限 即rwx
所以751表示：rwx（7）r-x（5）--x（1）

2024.10.11
chown命令
普通用户无法修改所属为其它用户或组，所以此命令只适用于root用户执行
chown命令可以修改文件、文件夹的所属用户和用户组
语法：chown [-R] [用户] [:] [用户组] 文件或文件夹
*选项，-R，同chmod，对文件夹内全部内容应用相同规则
*选项，用户，修改所属用户
*选项，用户组，修改所属用户组
*:用于分隔用户和用户组
例：
*chown root hello.txt，将hello.txt所属用户修改为root
*chown :root hello.txt，将hello.txt所属用户组修改为root
*chown root:itheima hello.txt，将hello.txt所属用户修改为root，用户组修改为itheima（黑马信息技术）
*chown -R root test，将文件夹test的所属用户修改为root并对文件夹内全部内容应用同样规则
总结
chown命令
*功能：修改文件、文件夹的所属用户、组
*限制，只可root执行
*语法：chown [-R] [用户] [:] [用户组] 文件或文件夹
*选项，-R，同chmod，对文件夹内全部内容应用相同规则
*选项，用户，修改所属用户
*选项，用户组，修改所属用户组
*:用于分隔用户和用户组

各类小技巧快捷键
1.ctrl+c强制停止
2.ctrl+d退出登出
3.history查看历史命令
4.!命令前缀，自动匹配上一个命令
5.ctrl+r，搜索历史命令
6.ctrl+a|e，光标移动到命令开始或结束
7.ctrl+←|→，左右跳单词
8.ctrl+l或clear命令 清屏

软件安装
Linux系统的应用商店
操作系统安装软件有很多方式，一般分为
*下载安装包自行安装
**如win系统使用exe文件、msi文件等
**如mac系统使用dmg文件、pkg文件等
*系统的应用商店内安装
**如win系统有microsoft store商店
**如mac系统有appstore商店
Linux同样支持这两种方式-Linux命令行内的“应用商店”，yum命令安装软件

yum命令
yum：RPM包软件管理器，用于自动化安装配置Linxu软件，并可以自动解决依赖问题
语法：yum [-y] [ install | remove | search ] 软件名称
*选项：-y，自动确认，无需手动确认安装或卸载过程
*install：安装
*remove：卸载
*search：搜索
yum命令需要root权限和联网

总结
1.在CentOS系统中，使用yum命令联网管理软件安装
yum语法：yum [-y] [ install | remove | search ] 软件名称
2.在Ubuntu系统中，使用apt命令联网管理软件安装
apt语法：apt [-y] [ install | remove | search ] 软件名称

systemctl控制软件启动关闭
systemctl命令
Linux系统很多软件（内置或第三方）均支持使用systemctl命令控制：启动、停止、开机自启
能被systemctl管理的软件，一般也称之为：服务
语法：systemctl start | stop | status | enable | disable 服务名
start启动 stop关闭 status查看状态 enable开启开机自启 disable关闭开机自启
系统内置的服务比较多，比如：
*NetworkManager，主网络服务
*network，副网络服务
*firewalld，防火墙服务
*sshd，ssh服务（FinalShell远程登录Linux使用的就是这个服务）
部分第三方软件安装后也可以以systemctl进行控制
*yum install -y ntp，安装ntp软件
可以通过ntpd服务名，配合systemctl进行控制
*yum install -y httpd，安装apache服务器软件
可以通过httpd服务名，配合systemctl进行控制
部分软件安装后没有自动集成到systemctl中，需手动添加

总结
1.systemctl命令的作用是：
可以控制软件（服务）的启动、关闭、开机自启动
*系统内置服务均可被systemctl控制
*第三方软件，如果总注册了可以被systemctl控制
*第三方软件，如果没有自动注册，可以手动注册
2.语法
systemctl start | stop | status | enable | disable 服务名

软链接
ln命令创建软链接
在系统中创建软链接，可以将文件、文件夹链接到其他为止
类似Windows系统中的【快捷方式】
语法：ln -s 参数1 参数2
*-s 选项，创建软连接
*参数1：被链接的文件或文件夹
*参数2：要链接去的目的地
例：
*ln -s /etc/yum.conf~/yum.conf
*ln -s /etc/yum~/yum

日期和时区
date命令
通过date命令可以在命令行中查看系统的时间
语法：date [-d] [+格式化字符串]
*-d 按照给定的字符串显示日期，一般用于日期计算
*格式化字符串：通过特定的字符串标记，来控制显示的日期格式
%Y 年
%y 年份后两位数字（00..99）
%m 月份（01..12）
%d 日（01..31）
%H 小时（00..23）
%M 分钟（00..59）
%S 秒（00..60）
%s 自1970-01-01 00:00:00 UTC 到现在的秒数

date命令
*使用date命令本体，无选项，直接查看时间
FRI OCT 11 14:46:57 CST 2024

2024-10-08 00:48:12
date “+%Y-%m-%d %H:%M:%S”
如上，由于中间带有空格，所以使用双引号包围格式化字符串，作为整体

date命令进行日期加减
-d选项可以给给定的字符串显示日期，一般用于日期计算
支持的时间标记有
year年
month月
day天
hour小时
minute分钟
second秒
-d可以和格式化字符串配合一起使用
date -d “+100day” “+%Y-%m-%d %H:%M:%S”
2025-01-19 14:55:53
date -d “+100day +1000hour”“+%Y-%m-%d %H:%M:%S”
2025-03-02 06:54:54
date -d “-4048 year”“+%Y-%m-%d %H:%M:%S”
-2024-10-11 14:59:13

修改linux时区
系统默认时区非中国的东八区
使用root权限，执行如下命令
rm -f /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
将系统自带的localtime文件删除，将/usr/share/zoneinfo/Asia/Shanghai文件链接为localtime文件即可

ntp程序
可以通过ntp程序自动校准系统时间
安装ntp:yum -y install ntp
启动并设置开机自启
*systemctl start ntpd
*systemctl enable ntpd
ntpd启动后就会定期联网校准系统时间
*也可以手动校准(需root权限)：ntpdate -u ntp.aliyun.com   
阿里云提供的服务网址配合ntpdate（安装ntp后会附带这个指令）命令自动校准

ip地址和主机名
ip地址
命令ifconfig，查看本机ip地址，无法使用命令可以安装：yum -y install net-tools
特殊ip地址
127.0.0.1，指代本机
0.0.0.0，可以指代本机；端口绑定中确定绑定关系；一些ip地址限制中表示所有ip的意思，如放行规则设置0.0.0.0，表允许任意ip访问
主机名
hostname指令查看
hostnamectl set-hostname 主机名 (需root

总结
ip地址用于给联网计算机在网络中定位
主机名就是主机名称，用于表示一个计算机
通过主机名找到对应的计算机IP地址就是主机名映射（域名解析）先通过本地记录查找，找不到就联网区公开DNS服务器查找

在VMware Worktation中配置固定ip
1.在VMware Workstation（或Fusion）中配置ip地址网管和网段
2.在Linux系统中手动修改配置文件，固定ip

配置Linux固定IP地址
VMware Workstation（或Fusion）中配置IP地址网关和网段（IP地址的范围）
Linux系统中修改固定ip
使用vim编辑 /etc/sysconfig/network-scripts/ifcfg-ens33文件，填入如下内容
BOOTPROTO=dhcp改为“static”
ONBOOT=no改为“yes”
新增如下内容
IPADDR=“IP地址”
NETMASK=“子网掩码”
GATEWAY=“网关”
DNS1=“设为网关即可”
或使用nmtui图形化工具
*执行：systemctl restart network重启网关，执行ifconfig查看地址
2024.10.12
网络请求和下载

使用ping命令测试某服务器是否可联通
语法：ping [-c num] ip或主机名
选项：-c，测试次数

weget命令进行网络文件下载
语法：wget [-b] url
选项：-b，后台下载，会将日志写入到当前工作目录的wget-log文件
选项：-c，下载大文件时若在某些时刻停止下载，恢复从上次取消下载的文件
参数：url，下载链接
tail命令可以监控后台下载进度：tail -f wget-log
如下载未完成，及时清理未完成的不可用文件

使用curl命令可以发起网络请求
语法：curl [-O] url
选项-O，用于下载使用

端口
是设备与外界通讯交流的出入口。端口可以分为：物理端口和虚拟端口两类
物理端口:又可称之为接口，是可见的端口，如USB接口，RJ45网口，HDMI端口等
虚拟端口：是指计算机内部的端口，是不可见的，是用来操作系统和外部进行交互使用的
计算机程序之间的通讯，通过ip只能锁定计算机，但是无法锁定具体程序
通过端口可以锁定计算机上的具体的程序，确保程序之间进行沟通
IP地址-小区地址 端口-住户的门牌号（程序）

Linux系统是一个超大号小区，可以支持65535个端口，6万多个端口分为3类进行使用：
*工人端口：1~1023，通常用于一些系统内置或知名程序的预留使用，如SSH服务的22端口，HTTPS服务的443端口非特殊需要，不要占用这个范围的端口（SSH协议-提供一个安全的传输通道 HTTPS协议-通过计算机网络进行安全通信）
*注册端口：1024~49151，通常可以随意使用，用于松散的绑定一些程序\服务（用户自定义）
*动态端口：49152~65535，通常不会固定绑定程序，而是当程序对外进行网络连接时，用于临时使用（多用于出口）
如计算机A的微信连接计算机B的微信，A使用的50001即动态端口，临时找一个端口作为出口
计算机B的微信使用端口5678，即注册端口，长期绑定此端口等待别人连接

查看端口占用
*nmap 查看指定IP的对外暴露端口
语法：nmap 被查看的IP地址 安装：yum -y install nmap
*netstat 查看制定端口的占用情况
语法：netstat -anp | grep 端口号，安装：yum -y install net-tools

wget -O CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
yum makecache
yum -y install update
yum update

2024.10.14
进程管理
进程
程序运行在操作系统中，是被操作系统所管理的
为管理运行的程序，每一个程序在运行的时候，便被操作系统注册为系统中的一个：进程
并会为每一个进程都分配一个独有的：进程ID（进程号）

查看进程
可以通过ps命令查看Linux系统中的进程信息
语法：ps [ -e -f ]
选项：-e，显示出全部的进程
选项：-f，以完全格式化的形式展示信息（展示全部信息）
一般来说，固定用法就是：ps -ef 列出全部进程的全部信息
从左到右分别是：
*UID：进程所属的用户ID
*PID：进程的进程号ID
*PPID：进程的父ID（启动此进程的其他进程）
*C：此进程的CPU占用率（百分比）
*STIME：进程的启动时间
*TTY：启动此进程的终端序号，如显示？，表示非终端启动
*TIME：进程占用CPU的时间
*CMD：进程对应的名称或启动路径或启动命令
查看指定进程
ps -ef|grep tail，过滤名称，进程号，用户ID，指定关键字进程

关闭进程
语法：kill [ -9 ] 进程ID
选项：-9，表示强制关闭进程。不使用此选项是否关闭看进程自身的处理机制

主机状态
查看系统资源占用
*可以通过top命令查看CPU、内存使用情况，类似Windows的任务管理器默认每5秒刷新一次
语法：直接输入top，按q或ctrl+c退出
top命令内容详解
*第一行
top：命令名称，14:39:58：当前系统时间，up 6 min：启动了6分钟，2 users：2个用户登录，load：1、5、15分钟的负载[1为一颗CPU百分百繁忙，4则为4颗]
*第二行
tasks：175个进程，1 running：1个进程子在运行，174 sleeping：174个进程睡眠，0个停止进程，0个僵尸进程
*第三行
%Cpu(s)：CPU使用率，*us：用户CPU使用率，*sy：系统CPU使用率，ni：高优先级进程占用CPU时间百分比，id：空闲CPU率，wa：IO等待CPU占用率，hi：CPU硬件中断率，si：CPU软件中断率，st：强制等待占用CPU率
*第四、五行
Kib Mem：物理内存，total：总量，*free：空闲，*used：使用，buff/cache：buff和cache占用
KibSwap：虚拟内存（交换空间），total：总量，free：空闲，used：使用，buff/cache：buff和cache占用
**   PID：进程id
*   USER：进程所属用户
*   PR：进程优先级，越小越高
*   NI：负值表示高有限制，正表示低优先级
*   VIRT：进程使用虚拟内存，单位KB
**   RES：进程使用物理内存，单位KB
*   SHR：进程使用共享内存，单位KB
*   S：进程状态（S休眠，R运行，Z僵尸状态，N附属优先级，I空闲状态）
**   %CPU：进程占用CPU率
**   %MEM：进程占用内存率
*   TIME+：进程使用CPU时间总计，单位10毫秒
*   COMMAND：进程的命令或名称或程序文件路径
主要关注第三行us（用户占用率）sy（系统占用率）第四行free（空闲）used（使用）
PID（进程号）RES（物理内存）%CPU（CPU占用）%MEM（内存占用）
top命令也支持选项：
-p 只显示某个进程的信息
-d 设置刷新时间，默认是5s
-c 显示产生进程的完整命令，默认是进程名
-n 指定刷新次数，比如 top -n 3，刷新输出3此后退出
-b 以非交互非全屏模式运行，以批次的方式执行top，一般配合-n指定输出几次统计信息，将输出重定向到指定文件，比如 top -b -n 3 > /home/1.txt
-i 不显示任何闲置（idle）或无用（zombie）的进程
-u 查找特定用户启动的进程

当top以交互式运行（非-b选项启动），可以用以下交互式命令进行控制
h键 按下h键，会显示帮助画面
c键 按下c键，会显示产生进程的完整命令，等同于-c参数，再次按下c键，变为默认显示
f键 按下f键，可以选择需要展示的项目
M键 按下M键，根据CPU使用百分比大小进行排序
T键 按下T键，根据时间/累计时间进行排序
E键 按下E键，切换顶部内存显示单位
e键 按下e键，切换进程顶部内存显示单位
l键 按下l键，切换显示平均负载和启动时间信息
i键 按下i键，不显示闲置或无用的进程，等同于-i参数，再次按下，变为默认显示
t键 按下t键，切换显示CPU状态信息
m键 按下m键，切换显示内存信息
磁盘信息监控
*使用df命令，可以查看硬盘的使用情况
语法：df[-h]
选项：-h，以更人性化的单位显示
*可以用iostat查看CPU、磁盘的相关信息
语法：iostat [-x] [num1] [num2]
*选项：-x，显示更多信息
*num1：数字，刷新间隔，num2：数字刷新几次
tps：该设备每秒的传输次数（Indicate the number of transfers per second that were issued to the device）。"一次传输"意思是"一次I/O请求"。多个逻辑请求可能会被合并为一次I/O请求"。"一次传输"请求的大小是未知的
使用iostat的-x选项，可以显示更多信息
rrqm/s：每秒这个设备相关的读取请求有多少被Merge了（当系统调用需要读取数据的时候，VFS将请求发到各个FS，如果FS发现不同的读取请求读取的是相同Block的数据，FS会将这个请求合并Merge，提高IO利用率，避免重复调用）
wrqm/s：每秒这个设备相关的写入请求有多少被Merge了
rsec/s：每秒读取的扇区数：sectors
wsec/：每秒写入的扇区数
*rKB/s：每秒发送到设备的读取请求数
*wkb/s：每秒发送到设备的写入请求数
avgrq-sz 平均请求扇区的大小
avgqu-sz 平均请求队列的长度。队列长度越短越好
await：每一个IO请求的处理的平均时间（单位是微秒毫秒）
svctm：表示平均每次设备I/O操作的服务时间（以毫秒为单位）
*%util：磁盘利用率

网络状态监控
*可以用sar命令查看网络的相关统计（sar命令非常复杂，这里仅作简单用于统计网络）
语法：sar -n DEV num1 num2
选项：-n，查看网络，DEV表示查看网络接口
num1：刷新间隔（不填就查看一次结束），num2：查看次数（不填无限次数）
信息解读：
IFACE 本地网卡接口的名称
rxpck/s 每秒钟接受的数据包
txpak/s 每秒钟发送的数据包
*rxKB/s 每秒钟接受的数据包大小，单位为KB
*txKB/s 每秒钟发送的数据包大小，单位为KB（监控网卡信息主要看这两个指标）
rxcmp/s 每秒钟接受的压缩数据包
txcmp/s 每秒钟发送的数据包
rxmcst/s 每秒钟接受的多播数据包

总结
1.使用top命令可以：
*类似Windows任务管理器
*查看CPU、内存、进程的信息
2.使用df命令可以：
*查看磁盘使用率
3.使用iostat可以：
*查看磁盘速率等信息
4.使用sar -n DEV命令可以：
*查看网络情况

环境变量
是操作系统（Windows、Linux、Mac）在运行的时候，记录的一些关键性信息，用以辅助系统运行
在Linux系统中执行：env命令即可查看当前系统中记录的环境变量
环境变量是一种KeyValue型结构，即名称和值
*HOME：/home/itheima，用户的HOME路径
*USER：root，当前操作用户
*PWD：当前工作路径
等等信息用于辅助系统在运行的时候从环境变量中获取关键信息
环境变量：PATH
无论当前工作目录是什么，都能执行如/usr/bin/cd这个程序，就是借助环境变量中：PATH这个项目的值来做到的
PATH记录了系统执行任何命令的搜索路径（路径之间以：隔开）
/usr/local/bin
/usr/bin
/usr/local/sbin
/usr/sbin
/home/root/.local/bin
/home/root/bin
执行命令按顺序从上述路径中搜索到执行的程序的本体
如执行cd命令，就从第二个目录/usr/bin中搜索执行cd命令

$符号
在Linux系统中，$符号被用于取"变量"的值
环境变量的值可以取得
语法：$环境变量名
比如：echo $PATH
就可以取得PATH这个环境变量的值，并通过echo语句输出出来
又或者：echo $ {PATH}ABC
当和其他内容混合在一起的时候，可以通过{}来标注取的变量是谁

自行设置环境变量
修改PATH的值
临时生效：export 变量名=变量值（export MYNAME=OMORI）（echo $MYNAME取得OMORI）
永久生效：
*针对当前用户生效：vim ~/.bashrc
*针对所有用户生效：vim /etc/profile
*立刻生效：source 配置文件
例：
mkdir myenv
vim /etc/profile
添加export PATH=$PATH:/root/myenv
source /etc/profile

2024.10.16
Linux文件的上传下载
yum -y install lrzsz 安装命令
rz 文件上传
sz 文件，进行文件下载

压缩和解压
压缩格式
*zip格式：Linux、Windows、MacOS，常用
*7zip：Windows系统常用
*rar：Windows系统常用
Windows系统中常用winrar、bandizip等软件
*tar：Linux、MacOS常用
*gzip：Linux、MacOS常用
Linux系统中操作tar、gzip、zip三种压缩格式

tar命令
Linux和Mac系统常用有2种压缩格式，后缀名分别是
*.tar，称之为tarball，归档文件，将文件组装到一个.tar的文件内的简单整合
*.gz，也常见为.tar .gz，gzip格式压缩文件，使用gzip压缩算法将文件压缩到一个文件内，极大减少文件体积
针对这两种格式，使用tar命令进行压缩和解压缩
语法：tar [ -c -v -x -f -z -C ] 参数1 参数2 ... 参数N
*-c，创建压缩文件，用于压缩模式（create创建）
*-v，显示压缩、解压过程，用于查看进度
*-x，解压模式
*-f，要创建的文件，或要解压的文件，-f选项必须在所有选项中位置处于最后一个
*-z，gzip模式，不适应-z就是普通的tarball格式
*-C，选择解压的目的地，用于解压模式
tar压缩
示例：
tar -cvf test.tar 1.txt 2.txt 3.txt
将1.txt 2.txt 3.txt 压缩到test.tar文件内
tar -zcvf test.tar.gz 1.txt 2.txt 3.txt
将1.txt 2.txt 3.txt压缩到test.tar.gz文件内，使用gzip模式
注意：
-z选项如果使用的话，一般处于选项位第一个
-f选项，必须在选项位最后一个

tar解压
示例：
tar -xvf test.tar
解压test.tar，将文件解压至当前目录
tar -xvf test.tar -C /home/omori
解压test.tar，将文件解压至指定目录（/home/omori）
tar -zxvf test.tar.gz -C /home/omori
以Gzip模式解压test.tar.gz，将文件解压至指定目录（/home/omori）
注意：
-f选项，必须在选项组合体的最后一位
-z选项，建议在开头位置
-C选项单独使用，和解压所需的其他参数分开

zip命令压缩文件
语法：zip [ -r ] 参数1 参数2 ... 参数N
*-r，被压缩的包含文件夹的时候，需要使用-r选项，和rm、cp等命令的-r效果一致
示例：
zip test.zip a.txt b.txt c.txt
将a.txt b.txt c.txt压缩到test.zip文件内
zip -r test.zip test omori a.txt
将test、omori两个文件夹和a.txt文件，压缩到test.zip文件内

unzip命令解压文件
解压zip压缩包
语法：unzip [ -d ] 参数
*-d，指定要解压去的位置，同tar的-C选项
参数，被解压的zip压缩包文件
示例：
unzip test.zip
将test.zip解压到当前目录
unzip test.zip -d /home/omori
将test.zip解压到指定文件夹内（/home/omori）

